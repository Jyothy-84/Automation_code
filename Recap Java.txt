Java Recap
1.Hello world we created for this need to install all the files
then we learn types of comments *single line comment *Multiline comments
/,// line comment

Data types/Variables: 
byte,short,int,long(integer type for range or scientific caliculation) 
float and double (floating type talks about the precession)
boolian true or false, char letter type
non-primitive data types:
String,Arrays,userdefined

Variables:
int default value 0, String value null
*Instance Variable(ex:every employee has its own id)(need to create separste object instace for employe details like name,id,mobile, sal,years of working)
*Static Variable no need to create object instance (ex company name, comapany adress)(memory save just one copy)
*Local Variable(inside the method)

Operaters:
Assignment--> just assigning the value
Arithmetic--> addition, sutraction like that(all mathematic caliculations)
Equality and Relational--> (==,<=,>=,(!= not equal to))  
Conditional operator--> (AND,OR) true or false(&&,||)and means both the conditions must be true,either one condition is false it will be false)
or means if either one condition is true it will be ture
Unary operator--> (preincrement ++i increment then assign the value, post increment i++ first increment then assign the value)
will use for loop

Statement:
if condition(when we write the if condition it will go check the condition)
ex:
int a = 30;
int b = 40;
if(b>a){
Sysout("The value b is greater than a");
}
output:The value b is greater than a
*********************************
if_else: condition(if_else when we write the condition in if it will go and check whether the condition is true or false if it's true if will execute, not it will be fall in to else condition) 
Scanner scn = new Scanner(Sysout.in);
(by using Scannner class to get the input dynamically)
ex:
int marks = 60;
if(marks>=35){
sysout("student will pass");
}else
{
sysout("student will fail);
}
output:Student pass
*******************************
else_if: (else_if when we need to use multiple condition will use else_if ladder)
ex:
int marks = 60
if(marks==35){
sysout("student pass");
}
else if ((marks>50) && (marks<60)){
sysout("student 2nd class");
}
else if((marks>60) && (marks<90){
sysout("student 1st class");
}
else
{
sysout("student is fail");
}
output:student 1st class
*****************************
nested_if:
nested if with inthe if there is inside one more if condition
ex:
int emp1 = 12000;
int emp2 = 15000;
int emp3 = 30000:
int highestSal= 0;
if ((emp1>emp2) && (emp1>3)){
highestSal=emp1;
}
else{
if(emp2>emp3){
highestSal= emp2;
}
else{
highestSal = emp3;
}
sysout("highest salary is" +highestSal);
}
output:Highest salary is 30000
***********************************
switch statement:while using  Switch statement need to use the break for code readability
ex:
String week = "Sunday"
switch(week){
case "Sunday" : Sysout(Day 1);
break;
case "Monday" : Sysout(Day 2);
break;
case "Tuesday": Sysout(Day 3);
break;
case "Wednesday":Sysout(Day 4);
break:
case "Thursday":Sysout(Day 5);
break;
case "Friday" :Sysout(Day 6);
break;
case "Saturday": sysout(Day 7);
break;
default:Sysout("Enter valied week name")
}
output:Day 1
******************************************
Loops:
for loop: we will use it for 3 parameters(initializtion,condition,increment or decrement, for loop will use when we clearly know the exit or end criteria then only we have to go  for loop)
initialization means initial value like 10,20,30 
condition means >= or<= it will go check each iteration
increment and decrement means i++ or i--
ex;
int i = 50;//incrementing the i value
for(i=50; i<=60; i++){
Sysout("Printing i values " + i);
}
output:50,51,52,53,54,55,56,57,58,59,60
for(i=60; i>=50; i--){
Sysout("printing i values "+i);
}
output:50,49,48,47,46,45,44,43,42,41,40
*********************************************
continue:skip the current iteration then move on to the next iteration
Break: break statement means it wiil come out of the loop(if we use the break statement for nested_for loop,it will come out from the only inner loop not the outer loop)
ex:
int i= 25;//break
for(i=25;i<=35;i++){
if(i==30){
break;
}
Sysout(i);
}
output:25,26,27,28,29
**********************************
ex:
int j= 25;//continue
for(j=25;j<=35;j++){
if(j==30){
continue;
}
Sysout(j);
}
output:25,26,27,28,29,31,32,33,34,35
*****************************************
nested for:with in the for loop we can include the another for loop 
ex:
int x= 0;
int y= 0;
for(x=0;x<=3;x++){
for(y=0;y<=3;y++){
Sysout(x+ "" +y);
}
}
output:0,0 0,1 0,2 0,3
       1,0 1,1 1,2 1,3
       2,0 2,1 2,2 2,3
       3,0 3,1 3,2 3,3
*******************************************
nested for with break:
ex:
int i= 0;
int j= 0;
for(i=0;i<=3;i++){
for(j=0;j<=3;j++){
if(j==3){
break;
}
Sysout(i+""+j);
}
}
output: 0,0,0,1 0,2
        1,0 1,1,1,2
        2,0 2,1 2,2
        3,0 3,1 3,2
******************************************
While: while and do while we never know the end criteria( while,when the condition is false it will come out of the loop till it will keep on execute)
do while: in the do while code will executed once,condition will checked at the end(even though it is false it will execute once)
ex:
int num =1;
while(num<=50){
Sysout(print odd numbers + num);
num=num+2;
}
output:1,3,5,7,9,11......49

*************************
do_while:
ex:
int num = 10;
do{
Sysout(num);
num++;
}
while(num<=9){
}
output:10(even though it is false it will print once then check the condition and it will out of the loop)
*******************************
Methods:
1.User defined Method(we create our method)
2.In_Built Method(It is alreday provided we can directly use)
*String Methods:In java the way we can use string values like.we use two string values used as a concatenate and also we can use as comparision of two strings(it is a boolian true/false),there are two way comparision equal and equal and ingnore case
ex:
concatenate two strings:
String val1 = "Sanju";
String val2 = "Sati";
Sysout(val + val2);
output:SanjuSati
******************
Ex:
Comarision twostrings:
String val3 = "Sanju";
String val4 = "sanju";
Sysout(val3 == value4);
Sysout(val3.euqals(val4));
Sysout(val3.equalsIgnoreCase(val4));
output:false,false,true(when it equalIgnorecase)
**************************
*Int Methods:In java Number means we do lot of mathematical computations like comapre two numbers or max or min number like that
Ex:
int a = 20;
int b = 30;
Sysout(a==b);
Sysout(math.max(a,b));
Sysout(math.min(a,b));
output: false,30,20
*************************
Integer ParseInt:
In the Java Integer Parse means to convert the string values into int(especially in the web table values are String values where we can use IntegerparseInt to convert String values to Int)
Ex:
int  x = IntegerParseInt("100);
int y = IntegerParseInt("120");
Sysout(x);
Sysout(y);
Sysout(x+y);
Sysout("x"  +"y");
Sysout("100" + "120");
Output:220,xy,100120
**********************************
Arrays:In Java where we can save multiple vales of same data type we use Arrays.Need to declare how much range otherwise will get (array index out of bound exception error)
three ways we can write arrays
*Creating Arrays(name)
*Assign Arrays(size)
*Define Arrays(values)
*********************
Creating arrays: we are creating arrays using data type like
datatypr arrName[]
int arrNumber[];
Define Arrays: Defining  array 
arrName = newdatatype[size];
arrNumber= new int [4];
assigning array: Assigning value
arrNumber[0] = 100;
arrNumber[1] = 120;
arrNumber[2] = 150;
********************************
Inheritance concept:
There are three types of Inheritance
1.Single level(parent calss is shared by chaild)
2.Multi level(super calss and parent calss both shared by chaild)
3.Hierarchical level(parent class used by two chaild classes)
When we calling Inheritance child is calling parent,When you want access the parent you have to use the Extends keyword(multiple inheritence is not possible, multi level is possible in Java,Mutiple is only possible in Interface).
Ex:Account class(parent class)
Saving Account(Chaild class)
Credit card information(Super class)
Current Account class(Chaild class)
*Account class to Saving Account class is single level(from chaild to mother )
*Saving Accont to Credit card is multi level(from mother to super class)
*Current Account to Account and Saving Account is Hierarchical(both chaild classes shared by mother)

ClassA(parent) ClassA(super class)
^               ^
|               |
|               |
ClassB       ClassB(parent)
(chaild)        ^
                |
                |
             ClassC
             (chaild)
Hyrarichal:The parent shared by both siblig.
       ClassA(parent)
  ClassB     ClassC
  (Child)      (Child)
***************************************
Pollymorphism:One task if performed by different ways.In java we use overloding and overriding to achieve the pollymorphism.
two types
1.Method OverLoding
2.Method OverRiding
Method overloding: if a class has multiple methods having same name but different in parameters(data types and arguments),increases the readability of the program, no Inhertance concept.
Ex:if we take a Method as addition we can write  same method addition in different ways by using datatypes like int, float 
int result = a+b; or int a+b+c;(addition of two numers or three numbers)
float result = a+b;(by changing diff data types)
Method overriding:If a chaild class has a same method has declared in the parent class is known as method over riding.
method has same name in both chaild and parent class with same parameters(arguments and data types) must be relation with the inheritance concept.
Same method ,same parameters,implimentation is different.(Ex:take your parents property modifie to your wish).
ex:in real time RBI comes with the intrest rate every private bank like HDFC or ICICI fix with their own interest rate.
****************************************
Access modifier:
Acccess modifier      withinclass   withinpack     outsidepackagebysubclassonly      outsidepackage
private                 Y                N                       N                         N
default                 Y                Y                       N                         N
protected               Y                Y                       Y                         N
public                  Y                Y                       Y                         Y
public(every thing will able to execute)(ex:family,friends,relatives)
protected(within class and within Package andout side the package, ex:salary details will let know only friends or family some times relatives)
default (only within the class and within package)
private(only within class)(ex: bak balance with in a family)
*****************************************
Encapsulation:You are hiding the data varable with the help of private key word
Encapsulation is a process of wrapping code and data togather into a single unit.
if any variable declared as a private we have to access with the help of getter and setter method 
**************************************
Exception Handling:
If you come across any Exception tyy this try and catch 
To handle the 0 and null values while execution 
ex:
int a = 10;
int b = 0;
int result = a/b;
we will get Arthimetic Execption 
ex:
String name = null;
will get null pointer exception
by using try and catch it will handle these type of exceptions while code excetion.
and one more is Array index out ofbound Exception
ex:
int [] arrayNum ={10,20,30,40,50}
sysout(arryNum[5]);
when we give 5 it is out of lenth in Array will get Array index out of exception
Finally:
when we include finally in the code irrespective of the scenario finally block will execute
***********************************************************
Super keyword:
If i wanted to access the variable or method which i coded in my parent i will be using the super keyword.


